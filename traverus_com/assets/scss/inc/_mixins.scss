

@mixin ease($speed) {
-webkit-transition: all $speed ease-in-out;
   -moz-transition: all $speed ease-in-out;
     -o-transition: all $speed ease-in-out;
    -ms-transition: all $speed ease-in-out;
        transition: all $speed ease-in-out;
}



@mixin delay($delay) {
	        animation-delay:$delay;
	-webkit-animation-delay:$delay;
	   -moz-animation-delay:$delay;
	     -o-animation-delay:$delay;
}


@mixin ani($delay, $name, $dur) {
    -webkit-animation-duration: $dur;
    animation-duration: $dur;
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    -webkit-animation-name: $name;
    animation-name: $name;
          animation-delay:$delay;
  -webkit-animation-delay:$delay;
     -moz-animation-delay:$delay;
       -o-animation-delay:$delay;
}


@mixin dur($adur) {
        animation-duration:$adur;
-webkit-animation-duration:$adur;
   -moz-animation-duration:$adur;
     -o-animation-duration:$adur;
}

@mixin blur($blur) {
           filter: blur($blur);
      -moz-filter: blur($blur);
   -webkit-filter: blur($blur);
}


@mixin parrallax($src) {
                 background: url($src);
          background-repeat: no-repeat;
      background-attachment: fixed;
            background-size: cover;
    -webkit-background-size: cover;
       -moz-background-size: cover;
         -o-background-size: cover;
             background-position-x: 0 !important;
        // background-position: top center !important;
        @include bp(L-phone){
          background-position: center !important;
        }
}



@mixin gradient($c1, $c2, $direction) {
    background-image: -webkit-linear-gradient($direction, $c1, $c2) !important;
    background-image: linear-gradient($direction, $c1, $c2) !important;
}





@mixin newFont($fontName) {
	@font-face {
	    src: url('../fonts/$fontName.eot');
	    src: url('../fonts/$fontName.eot') format('embedded-opentype'),
	         url('../fonts/$fontName.woff2') format('woff2'),
	         url('../fonts/$fontName.woff') format('woff'),
	         url('../fonts/$fontName.ttf') format('truetype'),
	         url('../fonts/$fontName.svg#$fontName') format('svg');
	}
}


.imgreflect{
	-webkit-box-reflect: below 2px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(85%, transparent), to(rgba(0, 0, 0, 0.35)));
}


/* Mixin */
@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}
/*use*/
// .element p {
//   @include vertical-align();
// }
